{"version":3,"sources":["connection/getTasksList.js","components/Menu.js","components/TableCell.js","components/Rows.js","connection/setTasksList.js","components/CalendarTable.js","pages/Calendar.js","pages/NewEvent.js","App.js","index.js"],"names":["getTasksList","JSON","parse","localStorage","getItem","Menu","props","data","participants","map","a","option","split","slice","filter","item","index","indexOf","i","className","id","onChange","e","target","to","process","TableCell","date","d","state","warning","name","canClose","prevProps","this","setState","match","onClick","Component","Rows","setTasksList","todoList","setItem","stringify","CalendarTable","delTask","arr","elem","today","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","Calendar","el","newParticipants","value","NewEvent","errorMessage","newEvent","alignment","find","error","message","List","push","preventDefault","elements","eventName","day","time","substr","toLowerCase","onSubmit","type","App","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.52e57b67.chunk.js","sourcesContent":["export const getTasksList = () => {\r\n    let arr = JSON.parse(localStorage.getItem('event'));\r\n    return arr\r\n}\r\n","import {NavLink} from \"react-router-dom\";\r\nimport {getTasksList} from \"../connection/getTasksList\";\r\nimport React from \"react\";\r\n\r\nconst Menu = (props) => {\r\n    const data = getTasksList() ? getTasksList() : [{\r\n        \"participants\": \"\",\r\n        \"name\": \"\",\r\n        \"date\": \"\"\r\n    }];\r\n    let participants = '';\r\n    data.map((a) => participants += ',' + a.participants);\r\n    participants = participants.split(',').slice(1);\r\n    const uniqueParticipants = participants.filter((item, index) => participants.indexOf(item) === index);\r\n\r\n    const option = uniqueParticipants.map((a, i) =>\r\n        <option key={i}>{a}</option>);\r\n    return (\r\n        <div className=\"manager\">\r\n            <div id=\"name\">Calendar</div>\r\n            <select className={'members'} onChange={(e) => props.participants(e.target)}>\r\n                <option>{'All members'}</option>\r\n                {option}\r\n            </select>\r\n            <div className='addevent'>\r\n                <NavLink to={process.env.PUBLIC_URL + '/addevent'}>\r\n                    <button className=\"css-button\" id=\"eventButton\">\r\n                        Event +\r\n                    </button>\r\n                </NavLink>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Menu;","import {Component} from \"react\";\r\nimport React from \"react\";\r\n\r\nexport default class TableCell extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: props.data,\r\n            participants: props.participants,\r\n            warning: false,\r\n            name: '',\r\n            canClose: true\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.participants !== prevProps.participants) {\r\n            this.setState({participants: this.props.participants});\r\n        }\r\n        else if (this.props.data !== prevProps.data) {\r\n            this.setState({data: this.props.data});\r\n        }\r\n    }\r\n\r\n    date = this.props.d + this.props.i[0] + this.props.i[1];\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"d-td\" id={this.props.participants}>\r\n                {this.state.data.map((item) => {\r\n                    if (item.date === this.date && item.participants.match(this.state.participants)) {\r\n                        return (\r\n                            <div className='taskWrap' key={item.date}>\r\n                                <div className='event' id={this.date} key={item.date}>\r\n                                    {item.name}\r\n                                </div>\r\n                                <div className=\"cl-btn-7\"  onClick={() => this.props.warning(item.name, item.date)}>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    } else if (this.state.participants === 'All members' && (item.date === this.date)) {\r\n                        return (\r\n                            <div className='taskWrap' key={item.date}>\r\n                                <div className='event' id={this.date} key={item.date}>\r\n                                    {item.name}\r\n                                </div>\r\n                                <div className=\"cl-btn-7\"  onClick={() => this.props.warning(item.name, item.date)}>\r\n\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    } else return ''\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n}","import TableCell from \"./TableCell\";\r\nimport React from \"react\";\r\n\r\nconst Rows = (props) => {\r\n\r\n    return (\r\n        <div className=\"d-tr\">\r\n            <div className=\"d-td time\">{props.i}</div>\r\n            <TableCell i = {props.i} d={'mon'}\r\n                       participants = {props.participants}\r\n                       warning = {props.warning}\r\n                       data ={props.data}/>\r\n            <TableCell i = {props.i} d={'tue'}\r\n                       participants = {props.participants}\r\n                       warning = {props.warning}\r\n                       data ={props.data}/>\r\n            <TableCell i = {props.i} d={'wed'}\r\n                       participants = {props.participants}\r\n                       warning = {props.warning}\r\n                       data ={props.data}/>\r\n            <TableCell i = {props.i} d={'thu'}\r\n                       participants = {props.participants}\r\n                       warning = {props.warning}\r\n                       data ={props.data}/>\r\n            <TableCell i = {props.i} d={'fri'}\r\n                       participants = {props.participants}\r\n                       warning = {props.warning}\r\n                       data ={props.data}/>\r\n        </div>\r\n    )\r\n}\r\nexport default Rows;","export const setTasksList = (todoList) => {\r\n    localStorage.setItem('event', JSON.stringify(todoList));\r\n}","import Rows from \"./Rows\";\r\nimport {getTasksList} from \"../connection/getTasksList\";\r\nimport {Component} from \"react\";\r\nimport {setTasksList} from \"../connection/setTasksList\";\r\nimport React from \"react\";\r\n\r\nclass CalendarTable extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data : getTasksList() || [{\r\n                \"participants\": \"\",\r\n                \"name\": \"\",\r\n                \"date\": \"\"\r\n            }],\r\n            warning: false\r\n        }\r\n    }\r\n\r\n    warning = (name, date) => {\r\n        if (this.state.warning === false) {\r\n            this.setState(({warning: true, date: date, name: name}))\r\n        }\r\n    }\r\n\r\n    delTask = (date) => {\r\n        const DB = [...getTasksList()];\r\n        const arr = DB.filter(elem => elem.date !== date);\r\n        setTasksList(arr);\r\n        this.setState(({data}) => {\r\n            const newArr = data.filter(elem => elem.date !== date);\r\n            return {\r\n                data: newArr,\r\n                warning: false,\r\n                canClose: true\r\n            }\r\n        });\r\n    }\r\n    date = ['10:00', '11:00', '12:00', '13:00', '14:00', '15:00', '16:00', '17:00', '18:00',];\r\n    today = new Date();\r\n    dd = String(this.today.getDate()).padStart(2, '0');\r\n    mm = String(this.today.getMonth() + 1).padStart(2, '0'); //January is 0!\r\n    yyyy = this.today.getFullYear();\r\n\r\n    today = this.dd + '/' + this.mm + '/' + this.yyyy;\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className=\"d-table\">\r\n                    <div className=\"d-tr\">\r\n                        <div className=\"d-td\">{'today is: '+ this.today}</div>\r\n                        <div className=\"d-td days\">Mon</div>\r\n                        <div className=\"d-td days\">Tue</div>\r\n                        <div className=\"d-td days\">Wed</div>\r\n                        <div className=\"d-td days\">Thu</div>\r\n                        <div className=\"d-td days\">Fri</div>\r\n                    </div>\r\n                    {this.date.map((a, i) =>\r\n                        <Rows id={i} i={a} key={i}\r\n                              participants={this.props.participants}\r\n                              warning={this.warning}\r\n                              data={this.state.data}/>)}\r\n                </div>\r\n                {(this.state.warning === true) ? (\r\n                        <div className='modal'>\r\n                            <div className='modalWindow'>\r\n                                <div className='confirmMessage'>\r\n                                    \"Are you sure, you want to delete {this.state.name}\"\r\n                                </div>\r\n                                <div className='noButton'>\r\n                                    <button className='no' onClick={() =>\r\n                                        this.setState({warning: false, canClose: true})}>\r\n                                        No\r\n                                    </button>\r\n                                </div>\r\n                                <div className='yesButton'>\r\n                                    <button className='yes' onClick={() =>\r\n                                        this.delTask(this.state.date)}>\r\n                                        Yes\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>)\r\n                    : ''}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CalendarTable;","import Menu from \"../components/Menu\";\r\nimport CalendarTable from \"../components/CalendarTable\";\r\nimport {Component} from \"react\";\r\nimport React from \"react\";\r\n\r\nclass Calendar extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            participants: 'All members'\r\n        }\r\n    }\r\n    participants = (el) => {\r\n        this.newParticipants = el.value;\r\n        this.setState({\r\n            participants: el.value\r\n        })\r\n    }\r\n\r\n    render(){\r\n    return (\r\n        <div>\r\n            <Menu participants={this.participants}/>\r\n            <CalendarTable participants = {this.state.participants}/>\r\n        </div>\r\n    )}\r\n}\r\nexport default Calendar;","import {getTasksList} from \"../connection/getTasksList\";\r\nimport {Component} from \"react\";\r\nimport {setTasksList} from \"../connection/setTasksList\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport React from \"react\";\r\n\r\nexport default class NewEvent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: getTasksList() || [{\r\n                \"participants\": \"\",\r\n                \"name\": \"\",\r\n                \"date\": \"\"\r\n            }],\r\n            participants: [\r\n                'Mariya, Bob, Alex',\r\n                'Steve, Bill, Elon',\r\n                'John',\r\n                'Angela'\r\n            ],\r\n            error: false,\r\n            message: ''\r\n        }\r\n    }\r\n\r\n    errorMessage = (newEvent, date) => {\r\n        let alignment = this.state.data.find(elem => elem.date === date)\r\n        this.setState(() => {\r\n            if (newEvent.name === '') {\r\n                return {\r\n                    error: true,\r\n                    message: 'Filed to create an event. Enter the name of the event.'\r\n                }\r\n            } else if (alignment) {\r\n                return {\r\n                    error: true,\r\n                    message: 'Filed to create an event. Time slot is already booked.'\r\n                }\r\n            } else {\r\n                const List = [...this.state.data];\r\n                List.push(newEvent)\r\n                setTasksList(List);\r\n\r\n                return {\r\n                    error: false,\r\n                    message: '',\r\n                    data: List\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    newEvent = (e) => {\r\n        e.preventDefault();\r\n        let elements = e.target.elements;\r\n        let name = elements.eventName.value;\r\n        let participants = elements.participants.value;\r\n        let day = elements.day.value;\r\n        let time = elements.time.value;\r\n        let date = (day.substr(0, 3) + time.substr(0, 2)).toLowerCase();\r\n        let newEvent = {\r\n            'name': name,\r\n            'participants': participants,\r\n            'date': date\r\n        };\r\n\r\n        this.errorMessage(newEvent, date);\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='addEvent'>\r\n                {this.state.error ? <div className='errorMessage'>\r\n                    {this.state.message}\r\n                    <div className=\"cl-btn-2\" onClick={()=>this.setState({error:false})}>\r\n                        <div>\r\n                            <div className=\"leftright\"/>\r\n                            <div className=\"rightleft\"/>\r\n                        </div>\r\n                    </div>\r\n                </div> : ''}\r\n                <form onSubmit={this.newEvent}>\r\n                    <div className='containerName'>\r\n                        Name of the event:\r\n                        <textarea className='eventName' name='eventName'/>\r\n                    </div>\r\n                    <div className='participants'>Participants<select name='participants'>\r\n                        {this.state.participants.map((elem, index) =>\r\n                            <option key={index} value={elem}>{elem}</option>\r\n                        )}\r\n                    </select></div>\r\n                    <div className='containerDay'>Day:<select name='day'>\r\n                        <option>Monday</option>\r\n                        <option>Tuesday</option>\r\n                        <option>Wednesday</option>\r\n                        <option>Thursday</option>\r\n                        <option>Friday</option>\r\n                    </select></div>\r\n                    <div className='containerTime'>Time:<select name='time'>\r\n                        <option>10:00</option>\r\n                        <option>11:00</option>\r\n                        <option>12:00</option>\r\n                        <option>13:00</option>\r\n                        <option>14:00</option>\r\n                        <option>15:00</option>\r\n                        <option>16:00</option>\r\n                        <option>17:00</option>\r\n                        <option>18:00</option>\r\n                    </select></div>\r\n                    <div className='containerButtons'>\r\n                        <div>\r\n                            <NavLink to={process.env.PUBLIC_URL + '/calendar'}>\r\n                                <button className='cancelButton'>\r\n                                    Cancel\r\n                                </button>\r\n                            </NavLink>\r\n                        </div>\r\n                        <input type='submit' className='createlButton' value='Create'/>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}","import './App.css';\nimport Calendar from \"./pages/Calendar.js\";\nimport  {Redirect, Switch, Route, BrowserRouter} from \"react-router-dom\";\nimport NewEvent from \"./pages/NewEvent\";\nimport React from \"react\";\n\nfunction App() {\n    return (\n        <BrowserRouter>\n            <div className=\"App\">\n                <Switch>\n                    <Route exact path={process.env.PUBLIC_URL + '/'} component={Calendar}/>\n                    <Route exact path={process.env.PUBLIC_URL + '/addevent'} component={NewEvent}/>\n                    <Route exact path={process.env.PUBLIC_URL + '/calendar'} component={Calendar}/>\n                </Switch>\n            </div>\n        </BrowserRouter>\n    )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}